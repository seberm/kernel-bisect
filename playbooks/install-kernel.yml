---
# TODO: Shouldn't be this module implemented as an Ansible task?
- hosts: all
  vars:
      in_kernel_pkg_path: "{{ kernel_pkg_path }}"
      in_kernel_pkg: "{{ kernel_pkg }}"
      in_reboot: "{{ reboot | default(False) }}"
  tasks:
    - name: Copy kernel inside DUTs
      copy:
        src: "{{ in_kernel_pkg_path }}"
        dest: /root/

    - name: Install kernel package
      yum:
        name: "/root/{{ in_kernel_pkg }}"
        state: present

    # initramfs is also generateed automatically by installator
    # This is done automatically by installator
#    - name: regenerate GRUB configuration
#      command: grub2-mkconfig -o /boot/grub2/grub.cfg

    - name: Set default kernel to the installed one (only for next boot)
      command: grub2-reboot 0

    - name: get current default kernel using grubby
      command: grubby --default-kernel
      register: current_default_kernel

    - name: "current default kernel (grub)"
      debug: msg="{{ current_default_kernel.stdout }}"

    - name: enforce system reboot on panic after N seconds
      command: grubby --args="panic=10" --update-kernel=ALL

    - name: Reboot system into newly installed kernel
      reboot:
        reboot_timeout: 600 # 10 minutes
      when: >
        {{ in_reboot }} == True

    - name: Running kernel version
      debug:
        msg: "{{ ansible_kernel }}"
